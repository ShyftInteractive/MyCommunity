.grid {
   display: grid;
   gap: var(--px-16) var(--px-16);
   grid-template-columns: repeat($grid-cols, 1fr);
   height: 100%;
   width: 100%;

   + .grid {
      margin: var(--px-16) 0;
   }

   &:last-of-type {
      margin: var(--px-16) 0 0 0;
   }

   &:only-of-type {
      margin: 0;
   }

   &--center {
      @extend .grid;
      align-items: center;
      align-content: center;
   }

   &--page {
      @extend .grid;
      align-content: stretch;
      align-items: stretch;
   }

   &--top {
      @extend .grid;
      align-items: start;
      align-content: start;
   }

   &--bottom {
      @extend .grid;
      align-items: end;
      align-content: end;
   }
}

@mixin base-column {
   display: flex;
   flex-direction: column;
   height: 100%;
   position: relative;
   width: 100%;

   @content;
}

@mixin grid-maker {
   @for $count from $grid-cols through 1 {
      &-#{$count} {
         @include base-column {
            grid-column-end: span #{$count};
            grid-column-start: auto;

            @include for-variant('end') {
               grid-column-end: span #{$count};
               grid-column-start: auto;
               justify-content: end;
            }

            @include for-variant('start') {
               grid-column-end: span #{$count};
               grid-column-start: auto;
               justify-content: start;
            }

            @if ($count > 1 and $count < $grid-cols) {
               @for $col-count from $grid-cols through 1 {
                  @include for-variant('at-#{$col-count}') {
                     @include base-column {
                        grid-column-end: span #{$count};
                        grid-column-start: $col-count;
                     }
                  }
               }
            }
         }

         @if ($count % 2 == 0 and $count < $grid-cols) {
            &--centered {
               @include base-column {
                  grid-column-end: span #{$count};
                  grid-column-start: (($grid-cols - $count) / 2) + 1;
               }
            }
         }
      }
   }
}

.col {
   @include with-queries {
      @include grid-maker;
   }
}

.justify\: {
   @include with-queries {
      &start   { justify-content: start;           }
      &end     { justify-content: end;             }
      &center  { justify-content: center;          }
      &stretch { justify-content: stretch;         }
      &around  { justify-content: space-around;    }
      &between { justify-content: space-between;   }
      &evenly  { justify-content: space-evenly;    }
   }
}
.justifyItems\: {
   @include with-queries {
      &start   { justify-items: start;    }
      &end     { justify-items: end;      }
      &center  { justify-items: center;   }
      &stretch { justify-items: stretch;  }
   }
}

.content\: {
   @include with-queries {
      &start   { align-content: start;          }
      &end     { align-content: end;            }
      &center  { align-content: center;         }
      &stretch { align-content: stretch;        }
      &around  { align-content: space-around;   }
      &between { align-content: space-between;  }
      &evenly  { align-content: space-evenly;   }
   }
}
.items\: {
   @include with-queries {
      &start   { align-items: start;   }
      &end     { align-items: end;     }
      &center  { align-items: center;  }
      &stretch { align-items: stretch; }
   }
}
